"""
Django settings for itms project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from itms.env import *

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = credentials.get("itms_secret_key", "")
default_db = credentials.get("default_db", {})

email_config = credentials.get("email_config", {})

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition
# Django build_in modules
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

# IT MS modules
INSTALLED_APPS += ["asset", "account", "department", "employee", "home", "logs", "api", "admin_itms"]


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "itms.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            "builtins": ["django.templatetags.static"],
        },
    },
]

WSGI_APPLICATION = "itms.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

try:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": default_db["NAME"],
            "USER": default_db["USER"],
            "PASSWORD": default_db["PASSWORD"],
            "HOST": default_db["HOST"],
            "PORT": default_db["PORT"],
        },
    }
except Exception as e:
    print(f"Database connection failure {e}")
    raise e


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "US/Central"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_ROOT = "/www/static"
# MEDIA_ROOT = "/www/media"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
STATIC_URL = "static/"
MEDIA_URL = "media/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# login logout redirect
# LOGIN_REDIRECT_URL = "/login"
# LOGOUT_REDIRECT_URL = "/login"
LOGIN_URL = "/login"

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
try:
    EMAIL_HOST = email_config["email_host"]  # mail service smtp
    EMAIL_HOST_USER = email_config["email_host_user"]  # email id
    EMAIL_HOST_PASSWORD = email_config["emai_host_password"]  # password
    EMAIL_PORT = email_config["email_port"]
    EMAIL_USE_TLS = True
except Exception as e:
    print(f"Email setup failure {e}")
    raise e
